package codec

import (
	"bytes"
	"fmt"
	"io"
	"io/ioutil"
	"sync"
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestDecoder(t *testing.T) {
	msg := "TESTQMESSAGEZXACWHDMIEMMNWAEXZPLAINQMESSAGEZXEAHXZCTQAPPLICATIONZXUXZJSONQFNQTESTZPZJSONZXAWAKHLAKCACACACACCGHGMGPHDHDGBHCHJCCDKCAHLAKCACACACACACACACACCHEGJHEGMGFCCDKCACCGFHIGBGNHAGMGFCAGHGMGPHDHDGBHCHJCCCMAKAJAJCCEHGMGPHDHDEEGJHGCCDKCAHLAKCACACACACACACACACACACACACCHEGJHEGMGFCCDKCACCFDCCCMAKAJAJAJCCEHGMGPHDHDEMGJHDHECCDKCAHLAKCACACACACACACACACACACACACACACACACCEHGMGPHDHDEFGOHEHCHJCCDKCAHLAKCACACACACACACACACACACACACACACACACACACACACCEJEECCDKCACCFDEHENEMCCCMAKAJAJAJAJAJCCFDGPHCHEEBHDCCDKCACCFDEHENEMCCCMAKAJAJAJAJAJCCEHGMGPHDHDFEGFHCGNCCDKCACCFDHEGBGOGEGBHCGECAEHGFGOGFHCGBGMGJHKGFGECAENGBHCGLHFHACAEMGBGOGHHFGBGHGFCCCMAKAJAJAJAJAJCCEBGDHCGPGOHJGNCCDKCACCFDEHENEMCCCMAKAJAJAJAJAJCCEBGCGCHCGFHGCCDKCACCEJFDEPCADIDIDHDJDKDBDJDIDGCCCMAKAJAJAJAJAJCCEHGMGPHDHDEEGFGGCCDKCAHLAKCACACACACACACACACACACACACACACACACACACACACACACACACCHAGBHCGBCCDKCACCEBCAGNGFHEGBCNGNGBHCGLHFHACAGMGBGOGHHFGBGHGFCMCAHFHDGFGECAHEGPCAGDHCGFGBHEGFCAGNGBHCGLHFHACAGMGBGOGHHFGBGHGFHDCAHDHFGDGICAGBHDCAEEGPGDECGPGPGLCOCCCMAKAJAJAJAJAJAJCCEHGMGPHDHDFDGFGFEBGMHDGPCCDKCAFLCCEHENEMCCCMCACCFIENEMCCFNAKCACACACACACACACACACACACACACACACACACACACAHNCMAKAJAJAJAJAJCCEHGMGPHDHDFDGFGFCCDKCACCGNGBHCGLHFHACCAKCACACACACACACACACACACACACACACACAHNAKCACACACACACACACACACACACAHNAKCACACACACACACACAHNAKCACACACAHNAKHNWACWPEABBLBKWAEF"
	buf := bytes.NewBufferString(msg)
	dec := NewDecoder(nil)
	var wg sync.WaitGroup
	wg.Add(1)
	go func() {
		defer wg.Done()
		for msg := range dec.MsgC() {
			buf, err := ioutil.ReadAll(msg)
			assert.NoError(t, err)
			if msg.HasHeader() {
				fmt.Println("Header:", msg.Header)
			}
			fmt.Println("Message:", string(buf))
			if msg.HasChecksum() {
				ok := msg.VerifyChecksum()
				assert.True(t, ok)
			}
			fmt.Println()
		}
	}()
	_, err := io.Copy(dec, buf)
	assert.NoError(t, err)
	dec.Close()
	wg.Wait()
}
